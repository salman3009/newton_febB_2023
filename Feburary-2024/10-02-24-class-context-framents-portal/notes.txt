Class component:

import {Component} from 'react';

class App extends Component{
    constructor(){
        super();
    }

    render(){
        return <>
         <h1>Welcome to class component</h1>
        </>
    }
}

How to use State in class component: 

class App extends Component{
    constructor(){
        super();
        this.state={
            flag:true
        }
    }

    setHandler=()=>{
        this.setState({flag:!flag});
    }

    render(){
        return <>
         <h1>Welcome to class component</h1>
         <h1>{this.state.flag}</h1>
         <button></button>
        </>
    }
}
============================================
Using Context inside the class component:
//createContext() is similar normally we used in nextjs or functional component in reactjs 
//usecontext() we cannot use inside the class component.
To use in class component we need to use below syntax:
 static contextType = createContext();
 {this.context.getLanguage}

 static contextType and this context is inbuilt keyword.
 ================================================
 Fragments in Reactjs:
 //It helps to wrapped the mulitple elements in single tag without adding extra nodes to the DOM.
 example:
    old appoarch:
       return (<div>
          <h1></h1>
          <h2></h2>
        </div>)

    new approach with fragments 
         return (<React.Fragment>
           <h1></h1>
          <h2></h2>
         </React.Fragment)

     new approach with fragments 
         return (<>
           <h1></h1>
          <h2></h2>
         </>) 
=================================================
Portals in Reactjs 
//16.0 onwards we have this concept 
//By using this it will help to develops modals,tooltips,popup.
//It will allows you to render components outside the current react hierachy.
//You can easily render elements into different parts of the DOM.
syntax:
index.html 
<body>
<div id="portal></div>
</body>
import ReactDOM from 'react-dom';
App.js 
function App(){
    return ReactDOM.createPortal(<h1>create portal demo</h1>,document.getElementByid("portal"))
}
============================================================
Creating Portal in nextjs 
 return ReactDOM.createPortal(<h1>create portal demo</h1>,document.body)
 https://code.newtonschool.co/newton-box/28pk06v9nvyl/
 =======================================================================
