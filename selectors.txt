Basic Selectors:
1.element selector 
    //It will target the particular element inside the html 
    //we need to use html tag name 
    //Drawbacks:It will apply for all the tags

2.id selector 
    //unique style for particular tag we need to apply 
    //we need to add id attribute in html tag 
    //to access in css we need to use symbol # and name of id 
    example: 
    #heading{
        color:red;
    }
3.class selector 
    //most used selector in entire css 
    //we need to add class attribute in html tag 
    //to access in css we need to use symbol . and name of the class.
    //class attribute please added in html tag whenever it is required.
    example:
    .theme{
        color:red;
    }
---
4.grouping selector 
     //combination of all selectors 
     //element selector + class selector + id selector ....
     //each seletor will be separated by comma (,)
example:
  .theme,p{
    color:red;
  }
5.universal selector 
     //it will apply for all tags 
example:
     *{
        color:red;
     }
    
     
Combinator Selector: relationship between two tags 
1.descendant (space) - parent/child/grandchild
2.child (>) - parent-child
3.general sibling (~)  - brother /sister/all tag
4.adjacent sibling (+) - brother/sister/first tag

Psuedo-elements:
1.before(::before)
//It will add contend from css to html before the text of that particular tag.
example:
selectors::before{
    content:"welcome";
}
2.after(::after)
//It will add content from css to html after the text of that particular tag.
example:
selectos::after{
    content:"language";
}
3.selection(::selection)
//It is use to highlight the content of the web page.
example:
selectors::selection{
    background-color:yellow;
    color:red;
}
4marker(::marker)
//To apply color for list tag
example:
selectors::marker{
    color:red;
}
5.
first-line(::first-line)
//to target first line of a given paragraph or content 
example:
selectors::first-line{
    color:blue;
}
Psuedo-class:

Psuedo-class-basic 
1.focus(input:focus)
2.required(input:required)

Psuedo-class-anchor 
1.link-(a:link)
2.active-(a:active)
3.visited-(a:visited)
4.hover -(a:hover)

Psuedo class general 
1.first-child (li:first-child)
//first element in the tag will target 
example:
li:first-child{
    color:green;
}

2.nth-child (li:nth-child(2n))
//it will start from first element
//it will work like a loop 
//2n or even -- even elements 
//2n+1 or odd -- odd elements 
//n --> all elements 
//3 --> specific elements
example:
li:nth-child(2n){
  color:red;
}

3.nth-of-type 
//both nth-child and nth-of-type will work in same way
//nth-child - will consider all siblings as their own element and it will give wront result 
//nth-of-type - always it will consider the exact siblings element.

4.nth-last-child (li:nth-last-child(2n))
//it will start from last element 
//it will work opposite to nth-child
example:
li:nth-last-child(2n){
  color:red;
}


Attributes Selector:
1.general attribute selector 
//It will apply for any html tag element.
example:
input[attribute]{
    border:10px solid green;
}
li[attribute]{
  color:red;
}
2.attribute with matching value selector 
//specific value matches will apply 
example:
input[attribute="text"]{
    border:10px solid green;
}
li[attribute="1"]{
  color:red;
}
3.attribute with starting value (^)
//anything that start with the specific value
example:
li[attribute^="ac"]{
  color:red;
}

4.attribute with ending value ($)
//anything that ends with that paritcular value 
example:
li[attribute$="ac"]{
  color:red;
}
5.attribute anywhere matching value (*)
//anywhere it matches that particular value
example:
li[attribute*="ac"]{
  color:red;
}
6.attribute selector with pipe symbol - (|)
//It is going to match starting keyword  matching with our given word alone with hyphen 
//otherwise it should have separate word
example:
li[attribute|="ac"]{
  color:red;
}
<li id="ac-lag">details</li>
7.attribute selector with tilde symbol(~)
//anywhere in the text it should be separate keyword 
example:
li[attribute~="ac"]{
  color:red;
}
<li id="two ac"></li>
===========================================================
totally: 31 selectors - Interview : 10 important selectors
symbol:
^ - caret - (start)
$ - dollar - (end)
* asterisk - (anywhere)
| pipe - (word with hyphen)
~ tilde - (separate)
==========================================
complete project:
1.element selectors 
2.id selectors 
3.class selectors 
4.grouping selectors 
5.universal selectors 
6.descendant (space) - parent/child/grandchild
7.Psuedo-class - focus(input:focus)
8.Psuedo-class - required(input:required)
9.Psuedo-class-anchor  - link-(a:link)
10.Psuedo-class-anchor - active-(a:active)
11.Psuedo-class-anchor - visited-(a:visited)
12.Psuedo-class-anchor - hover -(a:hover)
13.Psuedo-clas - nth-child (li:nth-child(2n))
14.attribute selector with matching value 
===============================================
Mini project
1.element selectors 
2.id selectors 
3.class selectors 
4.grouping selectors 
5.universal selectors 
================================================